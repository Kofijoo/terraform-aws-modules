name: Version Bump

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get latest tag
      id: get-latest-tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
        echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
        echo "Latest tag: $latest_tag"
    
    - name: Determine version bump
      id: version-bump
      run: |
        latest_tag="${{ steps.get-latest-tag.outputs.latest_tag }}"
        
        # Extract version numbers (remove 'v' prefix)
        version=${latest_tag#v}
        IFS='.' read -r major minor patch <<< "$version"
        
        # Check commit messages for version bump type
        commits=$(git log --oneline $(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD)
        
        if echo "$commits" | grep -i "breaking\|major"; then
          new_major=$((major + 1))
          new_version="v${new_major}.0.0"
        elif echo "$commits" | grep -i "feat\|feature\|minor"; then
          new_minor=$((minor + 1))
          new_version="v${major}.${new_minor}.0"
        else
          new_patch=$((patch + 1))
          new_version="v${major}.${minor}.${new_patch}"
        fi
        
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
        echo "New version: $new_version"
    
    - name: Create and push tag
      run: |
        new_version="${{ steps.version-bump.outputs.new_version }}"
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create annotated tag
        git tag -a "$new_version" -m "Release $new_version - Automated version bump"
        
        # Push tag
        git push origin "$new_version"
        
        echo "Created and pushed tag: $new_version"
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-bump.outputs.new_version }}
        release_name: Release ${{ steps.version-bump.outputs.new_version }}
        body: |
          ## Changes
          
          Automated release of Terraform AWS modules.
          
          ### Modules Updated
          - VPC Module
          - EC2 Module  
          - Security Group Module
          - ALB Module
          
          ### Usage
          ```hcl
          module "vpc" {
            source = "git::https://github.com/Kofijoo/terraform-aws-modules.git//modules/vpc?ref=${{ steps.version-bump.outputs.new_version }}"
            # module configuration
          }
          ```
        draft: false
        prerelease: false